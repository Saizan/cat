{-# OPTIONS --allow-unsolved-metas #-}
module Cat.Category.Free where

open import Agda.Primitive
open import Cubical hiding (Path)
open import Data.Product

open import Cat.Category as C

module _ {‚Ñì ‚Ñì' : Level} (‚ÑÇ : Category ‚Ñì ‚Ñì') where
  private
    open module ‚ÑÇ = Category ‚ÑÇ

  postulate
    Path : ( a b : Obj ‚ÑÇ ) ‚Üí Set ‚Ñì'
    emptyPath : (o : Obj ‚ÑÇ) ‚Üí Path o o
    concatenate : {a b c : Obj ‚ÑÇ} ‚Üí Path b c ‚Üí Path a b ‚Üí Path a c

  private
    module _ {A B C D : Obj ‚ÑÇ} {r : Path A B} {q : Path B C} {p : Path C D} where
      postulate
        p-assoc : concatenate {A} {C} {D} p (concatenate {A} {B} {C} q r)
          ‚â° concatenate {A} {B} {D} (concatenate {B} {C} {D} p q) r
    module _ {A B : Obj ‚ÑÇ} {p : Path A B} where
      postulate
        ident-r : concatenate {A} {A} {B} p (emptyPath A) ‚â° p
        ident-l : concatenate {A} {B} {B} (emptyPath B) p ‚â° p

  RawFree : RawCategory ‚Ñì ‚Ñì'
  RawFree = record
    { Object = Obj ‚ÑÇ
    ; Arrow = Path
    ; ùüô = Œª {o} ‚Üí emptyPath o
    ; _‚àò_ = Œª {a b c} ‚Üí concatenate {a} {b} {c}
    }
  RawIsCategoryFree : IsCategory RawFree
  RawIsCategoryFree = record
    { assoc = p-assoc
    ; ident = ident-r , ident-l
    ; arrow-is-set = {!!}
    ; univalent = {!!}
    }
